{
  "version": 3,
  "sources": ["../../@primevue/src/formfield/style/FormFieldStyle.js", "../../@primevue/src/formfield/BaseFormField.vue", "../../@primevue/src/formfield/FormField.vue", "../../@primevue/src/formfield/FormField.vue?vue&type=template&id=4107279f&lang.js"],
  "sourcesContent": ["import BaseStyle from '@primevue/core/base/style';\n\nconst classes = {\n    root: 'p-formfield p-component'\n};\n\nexport default BaseStyle.extend({\n    name: 'formfield',\n    classes\n});\n", "<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport FormFieldStyle from '@primevue/forms/formfield/style';\n\nexport default {\n    name: 'BaseFormField',\n    extends: BaseComponent,\n    style: FormFieldStyle,\n    props: {\n        name: {\n            type: String,\n            default: undefined\n        },\n        resolver: {\n            type: Function,\n            default: undefined\n        },\n        initialValue: {\n            type: null,\n            default: undefined\n        },\n        validateOnValueUpdate: {\n            type: Boolean,\n            default: undefined\n        },\n        validateOnBlur: {\n            type: Boolean,\n            default: undefined\n        },\n        validateOnMount: {\n            type: Boolean,\n            default: undefined\n        },\n        validateOnSubmit: {\n            type: Boolean,\n            default: undefined\n        },\n        as: {\n            type: [String, Object],\n            default: 'DIV'\n        },\n        asChild: {\n            type: Boolean,\n            default: false\n        }\n    },\n    provide() {\n        return {\n            $pcFormField: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n", "<template>\n    <component v-if=\"!asChild\" :is=\"as\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot :props=\"field.props\" v-bind=\"fieldAttrs\"></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :props=\"field.props\" v-bind=\"fieldAttrs\"></slot>\n</template>\n\n<script>\nimport BaseFormField from './BaseFormField.vue';\n\nexport default {\n    name: 'FormField',\n    extends: BaseFormField,\n    inheritAttrs: false,\n    inject: {\n        $pcForm: {\n            default: undefined\n        }\n    },\n    watch: {\n        formControl: {\n            immediate: true,\n            handler(newValue) {\n                this.$pcForm?.register?.(this.name, newValue);\n            }\n        }\n    },\n    computed: {\n        formControl() {\n            return {\n                name: this.name,\n                resolver: this.resolver,\n                initialValue: this.initialValue,\n                validateOnValueUpdate: this.validateOnValueUpdate,\n                validateOnBlur: this.validateOnBlur,\n                validateOnMount: this.validateOnMount,\n                validateOnSubmit: this.validateOnSubmit\n            };\n        },\n        field() {\n            return this.$pcForm?.fields?.[this.name] || {};\n        },\n        fieldAttrs() {\n            return {\n                ...this.field.props,\n                ...this.field.states\n            };\n        }\n    }\n};\n</script>\n", "<template>\n    <component v-if=\"!asChild\" :is=\"as\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot :props=\"field.props\" v-bind=\"fieldAttrs\"></slot>\n    </component>\n    <slot v-else :class=\"cx('root')\" :props=\"field.props\" v-bind=\"fieldAttrs\"></slot>\n</template>\n\n<script>\nimport BaseFormField from './BaseFormField.vue';\n\nexport default {\n    name: 'FormField',\n    extends: BaseFormField,\n    inheritAttrs: false,\n    inject: {\n        $pcForm: {\n            default: undefined\n        }\n    },\n    watch: {\n        formControl: {\n            immediate: true,\n            handler(newValue) {\n                this.$pcForm?.register?.(this.name, newValue);\n            }\n        }\n    },\n    computed: {\n        formControl() {\n            return {\n                name: this.name,\n                resolver: this.resolver,\n                initialValue: this.initialValue,\n                validateOnValueUpdate: this.validateOnValueUpdate,\n                validateOnBlur: this.validateOnBlur,\n                validateOnMount: this.validateOnMount,\n                validateOnSubmit: this.validateOnSubmit\n            };\n        },\n        field() {\n            return this.$pcForm?.fields?.[this.name] || {};\n        },\n        fieldAttrs() {\n            return {\n                ...this.field.props,\n                ...this.field.states\n            };\n        }\n    }\n};\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU;EACZC,MAAM;AACV;AAEA,IAAA,iBAAeC,UAAUC,OAAO;EAC5BC,MAAM;EACNJ;AACJ,CAAC;;;ACLD,IAAA,WAAe;EACXK,MAAM;EACN,WAASC;EACTC,OAAOC;EACPC,OAAO;IACHJ,MAAM;MACFK,MAAMC;MACN,WAASC;;IAEbC,UAAU;MACNH,MAAMI;MACN,WAASF;;IAEbG,cAAc;MACVL,MAAM;MACN,WAASE;;IAEbI,uBAAuB;MACnBN,MAAMO;MACN,WAASL;;IAEbM,gBAAgB;MACZR,MAAMO;MACN,WAASL;;IAEbO,iBAAiB;MACbT,MAAMO;MACN,WAASL;;IAEbQ,kBAAkB;MACdV,MAAMO;MACN,WAASL;;IAEbS,IAAI;MACAX,MAAM,CAACC,QAAQW,MAAM;MACrB,WAAS;;IAEbC,SAAS;MACLb,MAAMO;MACN,WAAS;IACb;;EAEJO,SAAO,SAAPA,UAAU;AACN,WAAO;MACHC,cAAc;MACdC,iBAAiB;;EAEzB;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA,IAAAC,UAAe;EACXtB,MAAM;EACN,WAASuB;EACTC,cAAc;EACdC,QAAQ;IACJC,SAAS;MACL,WAASnB;IACb;;EAEJoB,OAAO;IACHC,aAAa;MACTC,WAAW;MACXC,SAAO,SAAPA,QAAQC,UAAU;AAAA,YAAAC,eAAAC;AACd,SAAAD,gBAAA,KAAKN,aAAO,QAAAM,kBAAA,WAAAC,wBAAZD,cAAcE,cAAQ,QAAAD,0BAAA,UAAtBA,sBAAAE,KAAAH,eAAyB,KAAKhC,MAAM+B,QAAQ;MAChD;IACJ;;EAEJK,UAAU;IACNR,aAAW,SAAXA,cAAc;AACV,aAAO;QACH5B,MAAM,KAAKA;QACXQ,UAAU,KAAKA;QACfE,cAAc,KAAKA;QACnBC,uBAAuB,KAAKA;QAC5BE,gBAAgB,KAAKA;QACrBC,iBAAiB,KAAKA;QACtBC,kBAAkB,KAAKA;;IAE/B;IACAsB,OAAK,SAALA,QAAQ;AAAA,UAAAC;AACJ,eAAOA,iBAAA,KAAKZ,aAAO,QAAAY,mBAAA,WAAAA,iBAAZA,eAAcC,YAAM,QAAAD,mBAAA,SAAA,SAApBA,eAAuB,KAAKtC,IAAI,MAAK,CAAA;IAChD;IACAwC,YAAU,SAAVA,aAAa;AACT,aAAAC,cAAAA,cAAA,CAAA,GACO,KAAKJ,MAAMjC,KAAK,GAChB,KAAKiC,MAAMK,MAAK;IAE3B;EACJ;AACJ;;UChDsBC,KAAAzB,WAAO,UAAA,GAAzB0B,YAEWC,wBAFqBF,KAAA3B,EAAE,GAAlC8B,WAEW;;IAF0B,SAAOH,KAAAI,GAAE,MAAA;KAAkBJ,KAAAK,KAAI,MAAA,CAAA,GAAA;uBAChE,WAAA;AAAA,aAAqD,CAArDC,WAAqDN,KAAAA,QAAAA,WAArDG,WAAqD;QAA9C1C,OAAO8C,SAAAb,MAAMjC;SAAe8C,SAAAV,UAAU,CAAA,CAAA;;;uBAEjDS,WAAgFN,KAAAA,QAAAA,WAAhFG,WAAgF;;IAAlE,SAAOH,KAAAI,GAAE,MAAA;IAAW3C,OAAO8C,SAAAb,MAAMjC;KAAe8C,SAAAV,UAAU,CAAA;;;",
  "names": ["classes", "root", "BaseStyle", "extend", "name", "name", "BaseComponent", "style", "FormFieldStyle", "props", "type", "String", "undefined", "resolver", "Function", "initialValue", "validateOnValueUpdate", "Boolean", "validateOnBlur", "validateOnMount", "validateOnSubmit", "as", "Object", "asChild", "provide", "$pcFormField", "$parentInstance", "script", "BaseFormField", "inheritAttrs", "inject", "$pcForm", "watch", "formControl", "immediate", "handler", "newValue", "_this$$pcForm", "_this$$pcForm$registe", "register", "call", "computed", "field", "_this$$pcForm2", "fields", "fieldAttrs", "_objectSpread", "states", "_ctx", "_createBlock", "_resolveDynamicComponent", "_mergeProps", "cx", "ptmi", "_renderSlot", "$options"]
}
